{"version":3,"sources":["App.js","index.js"],"names":["result","have","2","3","4","5","App","useState","count","updateCount","haveCount","setHaveCount","getAmount","star","number","next","getResult","className","value","onChange","e","target","prev","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"6KAGMA,G,MAAS,IACTC,EAAO,CACXC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAGU,SAASC,IAAO,IAAD,EACCC,mBAAS,GADV,mBACrBC,EADqB,KACdC,EADc,OAEMF,mBAASN,GAFf,mBAErBS,EAFqB,KAEVC,EAFU,MAa5B,SAAmBH,IATnB,SAASI,EAAUC,EAAMC,GACvB,IAAMC,EAAOF,EAAO,EAEpB,OADAb,EAAOa,GAAQC,EACXD,GAAQ,EACHC,EAEFF,EAAUG,EAAMF,EAAOC,EAASJ,EAAUK,IAIjDH,CAAU,EAAGJ,GAEfQ,CAAUR,GAyBV,OACE,yBAAKS,UAAU,OACb,wCACU,2BAAOC,MAAOV,EAAOW,SA3BdC,IACnBX,EAAYW,EAAEC,OAAOH,UAyBnB,SAC+D,IAC7D,8BAAOlB,EAAO,GAAd,MAEF,wCACU,2BAAOkB,MAAOR,EAAU,GAAIS,SA3BtBC,IAClB,IAAMF,EAAQE,EAAEC,OAAOH,MACvBP,EAAcW,GAAD,YAAC,eAAeA,GAAhB,IAAsBjB,GAAIa,QAwBrC,SACqE,IACnE,8BAAOlB,EAAO,GAAd,MAEF,wCACU,2BAAOkB,MAAOR,EAAU,GAAIS,SA1BtBC,IAClB,IAAMF,EAAQE,EAAEC,OAAOH,MACvBP,EAAcW,GAAD,YAAC,eAAeA,GAAhB,IAAsBlB,GAAIc,QAuBrC,SACqE,IACnE,8BAAOlB,EAAO,GAAd,MAEF,wCACU,2BAAOkB,MAAOR,EAAU,GAAIS,SAzBrBC,IACnB,IAAMF,EAAQE,EAAEC,OAAOH,MACvBP,EAAcW,GAAD,YAAC,eAAeA,GAAhB,IAAsBnB,GAAIe,QAsBrC,SACsE,IACpE,8BAAOlB,EAAO,GAAd,MAEF,wCACU,2BAAOkB,MAAOR,EAAU,GAAIS,SAxBvBC,IACjB,IAAMF,EAAQE,EAAEC,OAAOH,MACvBP,EAAcW,GAAD,YAAC,eAAeA,GAAhB,IAAsBpB,GAAIgB,QAqBrC,SACoE,IAClE,8BAAOlB,EAAO,GAAd,OCnER,IAAMuB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACtB,EAAD,OAEFiB,I","file":"static/js/main.6fb559f0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nconst result = {};\nconst have = {\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0\n};\n\nexport default function App() {\n  const [count, updateCount] = useState(2);\n  const [haveCount, setHaveCount] = useState(have);\n\n  function getAmount(star, number) {\n    const next = star - 1;\n    result[star] = number;\n    if (star <= 2) {\n      return number;\n    }\n    return getAmount(next, star * number - haveCount[next]);\n  }\n\n  function getResult(count) {\n    getAmount(6, count);\n  }\n  getResult(count);\n  const changeCount = (e) => {\n    updateCount(e.target.value);\n  };\n\n  const updateFive = (e) => {\n    const value = e.target.value;\n    setHaveCount((prev) => ({ ...prev, 5: +value }));\n  };\n\n  const updateFour = (e) => {\n    const value = e.target.value;\n    setHaveCount((prev) => ({ ...prev, 4: +value }));\n  };\n\n  const updateThree = (e) => {\n    const value = e.target.value;\n    setHaveCount((prev) => ({ ...prev, 3: +value }));\n  };\n\n  const updateTwo = (e) => {\n    const value = e.target.value;\n    setHaveCount((prev) => ({ ...prev, 2: +value }));\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        6 want: <input value={count} onChange={changeCount} /> need:{\" \"}\n        <span>{result[6]} </span>\n      </div>\n      <div>\n        5 have: <input value={haveCount[5]} onChange={updateFive} /> need:{\" \"}\n        <span>{result[5]} </span>\n      </div>\n      <div>\n        4 have: <input value={haveCount[4]} onChange={updateFour} /> need:{\" \"}\n        <span>{result[4]} </span>\n      </div>\n      <div>\n        3 have: <input value={haveCount[3]} onChange={updateThree} /> need:{\" \"}\n        <span>{result[3]} </span>\n      </div>\n      <div>\n        2 have: <input value={haveCount[2]} onChange={updateTwo} /> need:{\" \"}\n        <span>{result[2]} </span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}