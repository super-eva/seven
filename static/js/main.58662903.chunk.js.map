{"version":3,"sources":["App.js","index.js"],"names":["result","have","2","full","notFull","3","4","5","App","useState","count","updateCount","haveCount","setHaveCount","getAmount","star","number","next","getResult","StarItem","curr","handleChange","need","id","value","onChange","className","e","target","prev","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.58662903.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nconst result = {};\nconst have = {\n  2: {full: 0, notFull:0},\n  3: {full: 0, notFull:0},\n  4: {full: 0, notFull:0},\n  5: {full: 0, notFull:0}\n};\n\nexport default function App() {\n  const [count, updateCount] = useState(1);\n  const [haveCount, setHaveCount] = useState(have);\n\n  function getAmount(star, number) {\n    const next = star - 1;\n    result[star] = number;\n    if (star <= 2) {\n      return number;\n    }\n    const totalHave = haveCount[next].full + haveCount[next].notFull\n    return getAmount(next, star * number - totalHave);\n  }\n\n  function getResult(count) {\n    getAmount(6, count);\n  }\n  getResult(count);\n  const changeCount = (e) => {\n    updateCount(e.target.value);\n  };\n\n  const updateFive = (e) => {\n    const value = e.target.value;\n    if(e.target.id==='full'){\n      setHaveCount((prev) => ({ ...prev, 5: {...prev[5], full: +value} }));\n    }\n    else if(e.target.id==='not_full'){\n      setHaveCount((prev) => ({ ...prev, 5: {...prev[5], notFull: +value} }));\n    }\n  };\n\n  const updateFour = (e) => {\n    const value = e.target.value;\n    if(e.target.id==='full'){\n      setHaveCount((prev) => ({ ...prev, 4: {...prev[4], full: +value} }));\n    }\n    else if(e.target.id==='not_full'){\n      setHaveCount((prev) => ({ ...prev, 4: {...prev[4], notFull: +value} }));\n    }\n  };\n\n  const updateThree = (e) => {\n    const value = e.target.value;\n    if(e.target.id==='full'){\n      setHaveCount((prev) => ({ ...prev, 3: {...prev[3], full: +value} }));\n    }\n    else if(e.target.id==='not_full'){\n      setHaveCount((prev) => ({ ...prev, 3: {...prev[3], notFull: +value} }));\n    }  \n  };\n\n  const updateTwo = (e) => {\n    const value = e.target.value;\n    if(e.target.id==='full'){\n      setHaveCount((prev) => ({ ...prev, 2: {...prev[2], full: +value} }));\n    }\n    else if(e.target.id==='not_full'){\n      setHaveCount((prev) => ({ ...prev, 2: {...prev[2], notFull: +value} }));\n    }  \n  };\n\n  const StarItem = ({star, curr, handleChange, need})=> {\n    return (\n      <div>\n        {star} have: full <input id=\"full\" value={curr.full} onChange={handleChange} /> not full <input id=\"not_full\" value={curr.notFull} onChange={handleChange} /> need: <span>{need} </span>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      6 want: <input id=\"full\" value={count} onChange={changeCount} /> need: <span>{result[6]} </span>\n      <StarItem star={5} curr={haveCount[5]} handleChange={updateFive} need={result[5]}/>\n      <StarItem star={4} curr={haveCount[4]} handleChange={updateFour} need={result[4]}/>\n      <StarItem star={3} curr={haveCount[3]} handleChange={updateThree} need={result[3]}/>\n      <StarItem star={2} curr={haveCount[2]} handleChange={updateTwo} need={result[2]}/>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}